load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_binary")

package(default_visibility = ["//visibility:public"])

# Custom ts_library compiler that runs tsc_wrapped with angular/compiler-cli statically linked
# This can be used with worker mode because we don't need the linker at runtime to make
# the angular plugin loadable
# Just a clone of @npm//@bazel/typescript/bin:tsc_wrapped with added deps
nodejs_binary(
    name = "tsc_wrapped_with_angular",
    data = [
        "@npm//@angular/compiler-cli",
        "@npm//@bazel/typescript",
    ],
    entry_point = "@npm//:node_modules/@bazel/typescript/internal/tsc_wrapped/tsc_wrapped.js",
    visibility = ["//:__subpackages__"],
)

# Workaround for https://github.com/bazelbuild/bazel-toolchains/issues/356. We need the
# "SYS_ADMIN" capability in order to run browsers with sandbox enabled.
platform(
    name = "rbe_platform",
    parents = ["@rbe_default//config:platform"],
    remote_execution_properties = """
      {PARENT_REMOTE_EXECUTION_PROPERTIES}
      properties: {
          name: "dockerAddCapabilities"
          value: "SYS_ADMIN"
      }
    """,
)

config_setting(
    name = "view_engine_mode",
    values = {
        "define": "angular_ivy_enabled=False",
    },
)
