@import '../../../angular/styles/common';

$defaultPickerIconSize: 24;
$defaultToggleLeftOffset: $defaultPickerIconSize / 2;
$withArrowsToggleLeftOffset: $defaultPickerIconSize + ($defaultPickerIconSize / 2) + 4;
$withArrowsLeftArrowOffset: $defaultPickerIconSize / 2;

$datePickerContentTop: 17;

$datePickerToggleWrapperArrowWidth: 24;
$datePickerToggleWrapperArrowHeight: pxToEm(16);
$datePickerToggleWrapperArrowLeftOffset: $defaultToggleLeftOffset;
$datePickerToggleWithArrowsWrapperArrowLeftOffset: $withArrowsToggleLeftOffset;
$datePickerToggleArrowWidth: 18;
$datePickerToggleArrowHeight: pxToEm(2);
$datePickerToggleArrowColor: $sbbColorGrey;
$datePickerToggleArrowBeforeOffset: pxToEm(-3);
$datePickerToggleArrowAfterOffset: pxToEm(9);

$datePickerCalendarBorderWidth: 2;
$datePickerCalendarBorder: pxToEm($datePickerCalendarBorderWidth) solid $sbbColorGrey;
$datePickerCalendarBg: $sbbColorWhite;
$datePickerCalendarHeaderColor: $sbbColorMetal;
$datePickerCalendarHeaderFontSize: pxToEm(13);
$datePickerCalendarWidthMobile: pxToEm(340);
$datePickerCalendarHeightMobile: pxToEm(380);
$datePickerCalendarWidth: pxToEm(428);
$datePickerCalendarHeight: pxToEm(428);
$datepickerCalendarLineColor: $sbbColorPlatinum;

$datePickerCalendarBorderRadius: pxToEm(2);
$datePickerCalendarBoxShadow: 0 pxToEm(8) 0 rgba(0, 0, 0, 0.15);
$datePickerRevertCalendarBoxShadow: 0 pxToEm(-8) 0 rgba(0, 0, 0, 0.15);
$datePickerCalendarHeaderHeight: pxToEm(68);
$datePickerCalendarHeaderLabelFontSize: pxToEm(21);
$datePickerCalendarHeaderLabelLineHeight: 3.2;

$datePickerCalendarTableContentPaddingMobile: 0 pxToEm(11) pxToEm(0) pxToEm(11);
$datePickerCalendarTableContentPaddingWidth: 18;
$datePickerCalendarTableContentPadding: 0 pxToEm($datePickerCalendarTableContentPaddingWidth)
  pxToEm(0) pxToEm($datePickerCalendarTableContentPaddingWidth);
$datePickerCalendarTableTodayFontFamily: $fontSbbBold;
$datePickerCalendarTableTodayColor: $sbbColorBlack;
$datePickerCalendarTableActiveColor: $sbbColorRed125;
$datePickerCalendarTableSelectedColor: $sbbColorGrey;
$datePickerCalendarTableRangeBgColor: $sbbColorMilk;
$datePickerCalendarTableColor: $sbbColorGrey;

$datePickerCalendarDisabledCellColor: $sbbColorCement;
$datePickerCalendarDisabledTextCellColor: $sbbColorCement;
$datePickerDisabledCellWidth: 32;
$datePickerDisabledCellTop: 20;
$datePickerDisabledCellLeft: 18;

// start of lean variables

$datePickerContentTopLean: 8;

$defaultToggleLeftOffsetLean: 6;
$withArrowsToggleLeftOffsetLean: 30;

$datePickerCalendarBorderLean: pxToEm(1) solid $sbbColorIron;
$datepickerCalendarLineColorLean: $sbbColorCloud;

$datePickerCalendarWidthMobileLean: pxToEm(303);
$datePickerCalendarHeightMobileLean: pxToEm(303);

$datePickerCalendarWidthLean: pxToEm(303);
$datePickerCalendarHeightLean: pxToEm(303);

$datePickerCalendarHeaderHeightLean: pxToEm(36);
$datePickerCalendarHeaderLabelFontSizeLean: pxToEm(15);
$datePickerCalendarHeaderLabelLineHeightLean: pxToEm(36);
$datePickerCalendarHeaderColorLean: $sbbColorIron;
$datePickerCalendarTableColorLean: $sbbColorIron;

$datePickerCalendarTableContentPaddingWidthLean: 16;
$datePickerCalendarTableContentPaddingLean: 0
  pxToEm($datePickerCalendarTableContentPaddingWidthLean)
  pxToEm($datePickerCalendarTableContentPaddingWidthLean)
  pxToEm($datePickerCalendarTableContentPaddingWidthLean);
$datePickerCalendarTableSelectedColorLean: $sbbColorIron;
$datePickerCalendarBoxShadowLean: 0 pxToEm(4) 0 rgba(0, 0, 0, 0.15);
$datePickerRevertCalendarBoxShadowLean: 0 pxToEm(-4) 0 rgba(0, 0, 0, 0.15);

$datePickerToggleWrapperArrowWidthLean: 12;
$datePickerToggleWrapperArrowHeightLean: pxToEm(8);
$datePickerToggleWrapperArrowLeftOffsetLean: $defaultToggleLeftOffsetLean +
  ($defaultPickerIconSize - $datePickerToggleWrapperArrowWidthLean) / 2;
$datePickerToggleWithArrowsWrapperArrowLeftOffsetLean: $withArrowsToggleLeftOffsetLean +
  ($defaultPickerIconSize - $datePickerToggleWrapperArrowWidthLean) / 2;
$datePickerToggleArrowWidthLean: 9;
$datePickerToggleArrowHeightLean: pxToEm(1);
$datePickerToggleArrowColorLean: $sbbColorIron;
$datePickerToggleArrowBeforeOffsetLean: pxToEm(-2);
$datePickerToggleArrowAfterOffsetLean: pxToEm($datePickerToggleArrowWidthLean / 2);

$datePickerCalendarDisabledCellColorLean: $sbbColorStorm;
$datePickerCalendarDisabledTextCellColorLean: $sbbColorStorm;
$datePickerDisabledCellWidthLean: 24;
$datePickerDisabledCellTopLean: 17;
$datePickerDisabledCellLeftLean: 12;
// end of lean variables

$datePickerToggleArrowTopOffset: -($datePickerToggleWrapperArrowHeight -
      $datePickerToggleArrowHeight);

@mixin datePickerCellContentBase() {
  position: absolute;
  top: 12.5%;
  left: 12.5%;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 72%;
  height: 81%;
  html:not(.sbb-lean) & {
    @include mq($from: tabletPortrait) {
      height: 84%;
    }
  }
  line-height: 1;
  padding-left: pxToEm(1);
  padding-bottom: pxToEm(1);
}

@mixin datePickerToggleArrow($dir: calendarDown) {
  position: absolute;
  left: pxToEm($datePickerToggleWrapperArrowLeftOffset);
  width: pxToEm($datePickerToggleWrapperArrowWidth);
  background-color: $datePickerCalendarBg;
  height: $datePickerToggleWrapperArrowHeight;

  html.sbb-lean & {
    width: pxToEm($datePickerToggleWrapperArrowWidthLean);
    height: $datePickerToggleWrapperArrowHeightLean;
    left: pxToEm($datePickerToggleWrapperArrowLeftOffsetLean);
  }

  &::before,
  &::after {
    content: '';
    display: block;
    position: absolute;
    background-color: $datePickerToggleArrowColor;
    width: pxToEm($datePickerToggleArrowWidth);
    height: $datePickerToggleArrowHeight;

    html.sbb-lean & {
      width: pxToEm($datePickerToggleArrowWidthLean);
      height: $datePickerToggleArrowHeightLean;
      background-color: $datePickerToggleArrowColorLean;
    }
  }
  &::before {
    left: $datePickerToggleArrowBeforeOffset;

    html.sbb-lean & {
      left: $datePickerToggleArrowBeforeOffsetLean;
    }
  }
  &::after {
    left: $datePickerToggleArrowAfterOffset;

    html.sbb-lean & {
      left: $datePickerToggleArrowAfterOffsetLean;
    }
  }
  @if $dir == calendarDown {
    top: $datePickerToggleArrowTopOffset;
    &::before,
    &::after {
      top: $datePickerToggleWrapperArrowHeight / 2;

      html.sbb-lean & {
        top: $datePickerToggleWrapperArrowHeightLean / 2;
      }
    }
    &::before {
      transform: rotate(-45deg);
    }
    &::after {
      transform: rotate(45deg);
    }
    .sbb-datepicker-with-arrows & {
      left: pxToEm($datePickerToggleWithArrowsWrapperArrowLeftOffset);

      html.sbb-lean & {
        left: pxToEm($datePickerToggleWithArrowsWrapperArrowLeftOffsetLean);
      }
    }
  } @else if $dir == calendarTop {
    top: auto;
    bottom: $datePickerToggleArrowTopOffset;
    &::before,
    &::after {
      top: auto;
      bottom: $datePickerToggleWrapperArrowHeight / 2;

      html.sbb-lean & {
        bottom: $datePickerToggleWrapperArrowHeightLean / 2;
      }
    }
    &::before {
      transform: rotate(45deg);
    }
    &::after {
      transform: rotate(-45deg);
    }
  }
}

.sbb-datepicker-popup {
  html:not(.sbb-lean) & {
    @include mq($from: desktop4k) {
      font-size: pxToRem($sizeFontDefault4k);
    }

    @include mq($from: desktop5k) {
      font-size: pxToRem($sizeFontDefault5k);
    }
  }

  .sbb-datepicker-popup-arrow {
    @include datePickerToggleArrow();
  }

  button {
    @include buttonResetFrameless();

    &:hover:enabled,
    &:focus:enabled {
      cursor: pointer;
    }
  }
}

.sbb-datepicker-popup-above {
  .sbb-datepicker-popup {
    .sbb-datepicker-popup-arrow {
      @include datePickerToggleArrow(calendarTop);
    }

    &.sbb-datepicker-with-arrows {
      .sbb-datepicker-popup-arrow {
        left: pxToEm($datePickerToggleWithArrowsWrapperArrowLeftOffset);

        html.sbb-lean & {
          left: pxToEm($datePickerToggleWithArrowsWrapperArrowLeftOffsetLean);
        }
      }
    }

    .sbb-datepicker-content {
      top: auto;
      bottom: pxToEm($datePickerContentTop);

      html.sbb-lean & {
        bottom: pxToEm($datePickerContentTopLean);
      }

      .sbb-calendar {
        box-shadow: $datePickerRevertCalendarBoxShadow;

        html.sbb-lean & {
          box-shadow: $datePickerRevertCalendarBoxShadowLean;
        }
      }
    }
  }
}

.sbb-datepicker-content {
  position: relative;
  width: 100%;
  top: pxToRem($datePickerContentTop);

  html.sbb-lean & {
    top: pxToRem($datePickerContentTopLean);
  }
}

.sbb-calendar {
  display: block;
  width: $datePickerCalendarWidthMobile;
  max-width: 100%;
  height: $datePickerCalendarHeightMobile;
  background-color: $datePickerCalendarBg;
  border: $datePickerCalendarBorder;
  border-radius: $datePickerCalendarBorderRadius;
  box-shadow: $datePickerCalendarBoxShadow;

  html.sbb-lean & {
    border: $datePickerCalendarBorderLean;
    width: $datePickerCalendarWidthMobileLean;
    height: $datePickerCalendarHeightMobileLean;
    box-shadow: $datePickerCalendarBoxShadowLean;
  }

  @include mq($from: tabletPortrait) {
    width: $datePickerCalendarWidth;
    height: $datePickerCalendarHeight;

    html.sbb-lean & {
      width: $datePickerCalendarWidthLean;
      height: $datePickerCalendarHeightLean;
    }
  }
}

.sbb-calendar-header {
  display: block;
  border-bottom: pxToRem(1) solid $datepickerCalendarLineColor;

  html:not(.sbb-lean) & {
    @include mq($from: desktop4k) {
      border-bottom-width: pxToRem(1 * $scalingFactor4k);
    }

    @include mq($from: desktop5k) {
      border-bottom-width: pxToRem(1 * $scalingFactor5k);
    }
  }

  html.sbb-lean & {
    border-bottom-color: $datepickerCalendarLineColorLean;
  }
}

.sbb-calendar-controls {
  display: flex;
  height: $datePickerCalendarHeaderHeight;
  align-items: center;

  html.sbb-lean & {
    height: $datePickerCalendarHeaderHeightLean;
  }
}

.sbb-calendar-controls-months,
.sbb-calendar-controls-years {
  height: $datePickerCalendarHeaderHeight;
  flex: 1 0 50%;
  text-align: center;
  position: relative;

  html.sbb-lean & {
    height: $datePickerCalendarHeaderHeightLean;
  }
}

.sbb-calendar-controls-months {
  &::after {
    content: '';
    display: block;
    position: absolute;
    width: 0;
    height: 100%;
    top: 0;
    right: 0;
    border-right: 1px solid $datepickerCalendarLineColor;

    html.sbb-lean & {
      border-right: 1px solid $datepickerCalendarLineColorLean;
    }

    html:not(.sbb-lean) & {
      @include mq($from: desktop4k) {
        border-right-width: pxToRem(1 * $scalingFactor4k);
      }

      @include mq($from: desktop5k) {
        border-right-width: pxToRem(1 * $scalingFactor5k);
      }
    }
  }
}

.sbb-calendar-controls-left-arrow,
.sbb-calendar-controls-right-arrow {
  display: flex;
  align-items: center;
  justify-content: center;
  outline: 0;

  color: $datePickerCalendarHeaderColor;

  &:hover,
  &:focus,
  &:active {
    color: $datePickerCalendarTableActiveColor;
  }

  width: pxToEm($defaultPickerIconSize);
  height: $datePickerCalendarHeaderHeight;
  vertical-align: middle;

  html.sbb-lean & {
    height: $datePickerCalendarHeaderHeightLean;
    color: $datePickerCalendarHeaderColorLean;
  }

  html:not(.sbb-lean) & {
    @include mq($from: tabletPortrait) {
      width: pxToEm($defaultPickerIconSize) + pxToEm(16);
    }
  }

  &[disabled] {
    opacity: 0;
    cursor: default;
  }
}

.sbb-calendar-controls-left-arrow {
  float: left;
}

.sbb-calendar-controls-right-arrow {
  float: right;
}

.sbb-calendar-controls-label {
  font-size: $datePickerCalendarHeaderLabelFontSize;
  color: $datePickerCalendarHeaderColor;
  font-family: $fontSbbLight;
  line-height: $datePickerCalendarHeaderLabelLineHeight;

  html.sbb-lean & {
    font-size: $datePickerCalendarHeaderLabelFontSizeLean;
    line-height: $datePickerCalendarHeaderLabelLineHeightLean;
    color: $datePickerCalendarHeaderColorLean;
  }
}

.sbb-calendar-content {
  padding: $datePickerCalendarTableContentPaddingMobile;

  @include mq($from: tabletPortrait) {
    padding: $datePickerCalendarTableContentPadding;

    html.sbb-lean & {
      padding: $datePickerCalendarTableContentPaddingLean;
    }
  }
}

.sbb-calendar-table {
  width: 100%;
  border-spacing: 0;
  border-collapse: collapse;
  margin: 0;
  position: relative;

  td,
  th {
    color: $datePickerCalendarTableColor;

    html.sbb-lean & {
      color: $datePickerCalendarTableColorLean;
    }
  }
}

.sbb-calendar-table-header {
  &::after {
    content: '';
    display: block;
    position: absolute;
    top: pxToEm(33);

    width: calc(100% + #{pxToEm(2 * 11)});
    left: pxToEm(-11);
    @include mq($from: tabletPortrait) {
      width: calc(100% + #{pxToEm(2 * $datePickerCalendarTableContentPaddingWidth)});
      left: pxToEm(-$datePickerCalendarTableContentPaddingWidth);

      html.sbb-lean & {
        width: calc(100% + #{pxToEm(2 * $datePickerCalendarTableContentPaddingWidthLean)});
        left: pxToEm(-$datePickerCalendarTableContentPaddingWidthLean);
      }
    }

    border-bottom: 1px solid $datepickerCalendarLineColor;

    html.sbb-lean & {
      border-bottom: 1px solid $datepickerCalendarLineColorLean;
    }

    html:not(.sbb-lean) & {
      @include mq($from: desktop4k) {
        border-bottom-width: pxToRem(1 * $scalingFactor4k);
      }

      @include mq($from: desktop5k) {
        border-bottom-width: pxToRem(1 * $scalingFactor5k);
      }
    }
  }

  tr th {
    font-family: $fontSbbRoman;
    font-weight: 400;
    font-size: $datePickerCalendarHeaderFontSize;
    text-transform: uppercase;
    padding: pxToEm(7, 13);
    color: $datePickerCalendarHeaderColor;

    html.sbb-lean & {
      color: $datePickerCalendarHeaderColorLean;
    }
  }
}

.sbb-calendar-table-header-divider {
  height: pxToEm(15);
}

.sbb-calendar-body-cell {
  position: relative;
  height: 0;
  line-height: 0;
  text-align: center;
  outline: 0;
  cursor: pointer;

  &:not(.sbb-calendar-body-disabled):hover,
  &:not(.sbb-calendar-body-disabled):focus {
    .sbb-calendar-body-cell-content {
      color: $datePickerCalendarTableActiveColor;
      border-color: $datePickerCalendarTableActiveColor;
    }
  }

  &.sbb-calendar-body-range-background,
  &.sbb-calendar-body-selected-begin,
  &.sbb-calendar-body-selected-end {
    &::before {
      content: '';
      background-color: $datePickerCalendarTableRangeBgColor;
      @include datePickerCellContentBase();
      width: 100%;
      left: 0;
    }
  }

  &.sbb-calendar-body-selected-begin,
  &.sbb-calendar-body-selected-end {
    &::before {
      width: 50%;
    }
  }

  &.sbb-calendar-body-selected-begin {
    &::before {
      left: auto;
      right: 0;
    }
  }

  &:not(.sbb-calendar-body-disabled).sbb-calendar-body-selected,
  &.sbb-calendar-body-selected-begin,
  &.sbb-calendar-body-selected-end {
    .sbb-calendar-body-cell-content {
      background-color: $datePickerCalendarBg;
      color: $datePickerCalendarTableSelectedColor;
      border-color: $datePickerCalendarTableSelectedColor;

      html.sbb-lean & {
        color: $datePickerCalendarTableSelectedColorLean;
        border-color: $datePickerCalendarTableSelectedColorLean;
      }
    }
  }

  &.sbb-calendar-body-today {
    font-family: $datePickerCalendarTableTodayFontFamily;
    color: $datePickerCalendarTableTodayColor;
  }

  &.sbb-calendar-body-disabled {
    color: $datePickerCalendarDisabledTextCellColor;
    cursor: default;

    html.sbb-lean & {
      color: $datePickerCalendarDisabledTextCellColorLean;
    }

    &:not(.empty)::after {
      content: '';
      width: pxToEm($datePickerDisabledCellWidth);
      height: pxToEm(1);
      top: pxToEm($datePickerDisabledCellTop);
      left: calc(50% - #{pxToEm($datePickerDisabledCellLeft)});
      background-color: $datePickerCalendarDisabledCellColor;
      display: block;
      position: absolute;
      transform: rotate(-45deg);

      html.sbb-lean & {
        background-color: $datePickerCalendarDisabledCellColorLean;
        width: pxToEm($datePickerDisabledCellWidthLean);
        top: pxToEm($datePickerDisabledCellTopLean);
        left: calc(50% - #{pxToEm($datePickerDisabledCellLeftLean)});
      }

      html:not(.sbb-lean) & {
        @include mq($from: tabletPortrait) {
          top: pxToEm(26);
        }
      }
    }
  }

  .sbb-calendar-body-cell-content {
    border-color: transparent;
    border-width: pxToEm(2);
    border-style: solid;
    border-radius: 50%;
    @include datePickerCellContentBase();
  }
}
