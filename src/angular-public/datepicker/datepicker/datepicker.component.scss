@import '../datepicker';

.sbb-datepicker {
  display: inline-block;
  width: 100%;
  min-width: pxToRem($datePickerMinWidth);
  color: $inputFieldColor;

  @include datePickerButton;

  .sbb-datepicker-toggle,
  .sbb-datepicker-arrow {
    display: block;

    button {
      width: 100%;
      height: 100%;
    }
  }

  .sbb-datepicker-toggle {
    left: toPx($defaultToggleLeftOffset);

    @include absoluteCenterY();
    @extend %pickerIconsSize;

    button {
      outline: 0;
      color: inherit;
      &:not(:disabled) {
        &:hover,
        &:focus,
        &:active {
          color: $sbbColorRed125;
        }
      }
    }

    @include publicOnly() {
      @include mq($from: desktop4k) {
        left: toPx($defaultToggleLeftOffset * $scalingFactor4k);
      }

      @include mq($from: desktop5k) {
        left: toPx($defaultToggleLeftOffset * $scalingFactor5k);
      }
    }
  }

  &.sbb-datepicker-arrows-enabled > .sbb-datepicker-toggle {
    left: toPx($withArrowsToggleLeftOffset);

    @include publicOnly() {
      @include mq($from: desktop4k) {
        left: toPx($withArrowsToggleLeftOffset * $scalingFactor4k);
      }

      @include mq($from: desktop5k) {
        left: toPx($withArrowsToggleLeftOffset * $scalingFactor5k);
      }
    }
  }

  .sbb-datepicker-arrow {
    @extend %pickerIconsSize;
    @include absoluteCenterY();
    outline: 0;
    color: inherit;
    &:not(:disabled) {
      &:hover,
      &:focus,
      &:active {
        color: $sbbColorRed125;
      }
    }

    &.sbb-datepicker-arrow-left {
      left: toPx($withArrowsLeftArrowOffset);

      @include publicOnly() {
        @include mq($from: desktop4k) {
          left: toPx($withArrowsLeftArrowOffset * $scalingFactor4k);
        }

        @include mq($from: desktop5k) {
          left: toPx($withArrowsLeftArrowOffset * $scalingFactor5k);
        }
      }
    }

    &.sbb-datepicker-arrow-right {
      right: toPx($withArrowsRightArrowOffset);

      @include publicOnly() {
        @include mq($from: desktop4k) {
          right: toPx($withArrowsRightArrowOffset * $scalingFactor4k);
        }

        @include mq($from: desktop5k) {
          right: toPx($withArrowsRightArrowOffset * $scalingFactor5k);
        }
      }
    }
  }

  position: relative;

  .sbb-date-input {
    min-width: pxToRem($datePickerMinWidth);
    width: 100%;
  }

  &.sbb-datepicker-toggle-enabled > .sbb-date-input,
  &.sbb-datepicker-arrows-enabled > .sbb-date-input {
    padding-left: pxToRem($dateInputOneIconPadding - $dateInputBorderWidth);

    @include publicOnly() {
      @include mq($from: desktop4k) {
        padding-left: pxToRem(
          $dateInputOneIconPadding * $scalingFactor4k - $dateInputBorderWidth * $scalingFactor4k
        );
      }

      @include mq($from: desktop5k) {
        padding-left: pxToRem(
          $dateInputOneIconPadding * $scalingFactor5k - $dateInputBorderWidth * $scalingFactor5k
        );
      }
    }
  }

  &.sbb-datepicker-arrows-enabled > .sbb-date-input {
    padding-right: pxToRem($dateInputOneIconPadding - $dateInputBorderWidth);

    @include publicOnly() {
      @include mq($from: desktop4k) {
        padding-right: pxToRem(
          $dateInputOneIconPadding * $scalingFactor4k - $dateInputBorderWidth * $scalingFactor4k
        );
      }

      @include mq($from: desktop5k) {
        padding-right: pxToRem(
          $dateInputOneIconPadding * $scalingFactor5k - $dateInputBorderWidth * $scalingFactor5k
        );
      }
    }
  }

  &.sbb-datepicker-arrows-enabled.sbb-datepicker-toggle-enabled > .sbb-date-input {
    padding-left: pxToRem($dateInputTwoIconPadding - $dateInputBorderWidth);

    @include publicOnly() {
      @include mq($from: desktop4k) {
        padding-left: pxToRem(
          $dateInputTwoIconPadding * $scalingFactor4k - $dateInputBorderWidth * $scalingFactor4k
        );
      }

      @include mq($from: desktop5k) {
        padding-left: pxToRem(
          $dateInputTwoIconPadding * $scalingFactor5k - $dateInputBorderWidth * $scalingFactor5k
        );
      }
    }
  }

  &.sbb-datepicker-disabled {
    color: $inputFieldDisabledColor;
  }
}
