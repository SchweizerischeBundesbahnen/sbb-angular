@import '../../../angular-core/styles/common';

$toggleOptionIconSize: 24;
$toggleOptionButtonBg: $sbbColorMilk;
$toggleOptionButtonColor: $sbbColorGrey;
$toggleOptionRadius: 2;
$toggleOptionButtonPadding: pxToEm(8) pxToEm(23) pxToEm(9);
$toggleOptionInfoTextFontSize: 13;
$toggleOptionButtonBgSelected: $sbbColorWhite;
$toggleOptionButtonBorderSelected: $sbbColorBlack;
$toggleOptionButtonColorSelected: $sbbColorBlack;
$toggleOptionButtonMinHeight: pxToEm(65);
$toggleOptionInfoTextTransition: max-height 0.25s linear, opacity 0.25s ease;
$toggleOptionContentTransition: opacity 0.25s ease, visibility 0.25s ease, padding 0.2s ease,
  max-height 0.2s ease;
$toggleOptionContentPadding: 24;
$toggleOptionContentBg: $sbbColorWhite;

.sbb-toggle {
  font-size: 1rem;
  @include mq($from: desktop4k) {
    font-size: toRem(1 * $scalingFactor4k);
  }

  @include mq($from: desktop5k) {
    font-size: toRem(1 * $scalingFactor5k);
  }
}

.sbb-toggle-label-wrapper {
  display: flex;
  align-items: stretch;
}

.sbb-toggle-option {
  flex: 1;
}

.sbb-toggle-option-button {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  background-color: $toggleOptionButtonBg;
  color: $toggleOptionButtonColor;
  border-radius: pxToEm($toggleOptionRadius);
  padding: pxToEm(8) pxToEm(15) pxToEm(9);
  line-height: 1.5;
  border: pxToEm(1) solid transparent;
  min-height: $toggleOptionButtonMinHeight;

  @include mq($from: desktop) {
    padding: $toggleOptionButtonPadding;
  }

  &:hover {
    cursor: pointer;
  }

  .sbb-toggle-option-selected & {
    background-color: $toggleOptionButtonBgSelected;
    border-color: $toggleOptionButtonBorderSelected;
    color: $toggleOptionButtonColorSelected;
  }
}

.sbb-toggle-option-button-icon {
  @include svgIconColor(
    $toggleOptionButtonColor
  ); // TODO(icon-migration): remove definition because icons inherit colors
  display: inline-block;
  vertical-align: middle;
  width: pxToEm($toggleOptionIconSize);
  height: pxToEm($toggleOptionIconSize);

  // TODO(icon-migration): remove definition because icons inherit colors
  .sbb-toggle-option-selected & {
    @include svgIconColor($toggleOptionButtonColorSelected);
  }
}

.sbb-toggle-option-button-label-wrapper {
  text-align: center;
}

.sbb-toggle-option-button-label {
  display: inline-block;
  color: inherit;
  vertical-align: middle;

  .sbb-toggle-option-has-icon & {
    max-width: calc(100% - #{pxToEm($toggleOptionIconSize)});
    text-align: left;
    padding-left: 0.5em;
  }
}

.sbb-toggle-option-button-info-text {
  display: block;
  color: inherit;
  font-size: pxToEm($toggleOptionInfoTextFontSize);
  max-height: 3em;
  opacity: 1;
  overflow: hidden;
  transition: $toggleOptionInfoTextTransition;

  .sbb-toggle-option-selected & {
    opacity: 0;
    max-height: 0;
  }
}

.sbb-toggle-option-content {
  display: flex;
  background-color: $toggleOptionContentBg;
  padding: pxToEm($toggleOptionContentPadding);
  max-height: pxToEm(600);
  visibility: visible;
  opacity: 1;
  transition: $toggleOptionContentTransition;
  margin-top: pxToEm(-2);
  position: relative;
  border: pxToEm(1) solid $sbbColorBlack;
  border-radius: pxToEm($toggleOptionRadius);

  &:empty {
    max-height: 0;
    visibility: hidden;
    opacity: 0;
    padding: 0;
  }

  &::before {
    content: '';
    position: absolute;
    height: 0;
    top: pxToEm(-1);
    width: calc(50% - #{pxToEm(1)});
    border-bottom: pxToEm(1) solid $sbbColorSilver;
  }

  .sbb-toggle-first-option-selected & {
    border-top-left-radius: 0;
    &::before {
      left: 0;
    }
  }

  .sbb-toggle-last-option-selected & {
    border-top-right-radius: 0;
    &::before {
      right: 0;
    }
  }
}
