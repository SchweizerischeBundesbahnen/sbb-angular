@import '../../../angular-core/styles/common';

$tooltipBorderRadius: 2;
$tooltipBorderWidth: if($sbbBusiness, 1, 2);
$tooltipMaxWidth: 460;
$tooltipIconSize: 24;
$tooltipContentPadding: if($sbbBusiness, 8, 24);
$tooltipColor: if($sbbBusiness, $sbbColorBlack, $sbbColorGrey);
$tooltipBorderColor: if($sbbBusiness, $sbbColorIron, $sbbColorGrey);
$tooltipActiveColor: if($sbbBusiness, $sbbColorRed125, $sbbColorRed);
$tooltipBoxShadowColor: rgba(102, 102, 102, 0.15);
$tooltipShadowSize: if($sbbBusiness, 4, 8);
$tooltipContentArrowSize: 20;
$tooltipShadowBorderWidth: 14;
$tooltipArrowRightPosition: calc(100% - #{pxToEm(15.5)});
$tooltipArrowLeftPosition: pxToEm(15.5);

@mixin tooltipIconActive {
  /* TODO: Remove with future release */
  @include svgIconColor($tooltipActiveColor);
  color: $tooltipActiveColor;
  border-color: $tooltipActiveColor;
}

.sbb-tooltip-trigger {
  display: inline-block;
}

.sbb-tooltip-trigger-active {
  @include tooltipIconActive;
}

.sbb-tooltip-content-above {
  margin-bottom: pxToEm($tooltipShadowBorderWidth + $tooltipShadowSize + $tooltipBorderWidth);

  .sbb-tooltip-shadow {
    width: calc(100% + #{toPx(2 * $tooltipBorderWidth)});
    background-color: $tooltipBoxShadowColor;
    height: pxToEm($tooltipShadowSize);
    bottom: pxToEm(-$tooltipShadowSize);
    position: absolute;
    box-sizing: border-box;
    margin-left: pxToEm(-$tooltipBorderWidth);
    margin-right: pxToEm($tooltipBorderWidth);
    border-radius: 0 0 toPx($tooltipBorderRadius) toPx($tooltipBorderRadius);

    @include publicOnly() {
      @include mq($from: desktop4k) {
        width: calc(100% + #{toPx(2 * $tooltipBorderWidth * $scalingFactor4k)});
      }

      @include mq($from: desktop5k) {
        width: calc(100% + #{toPx(2 * $tooltipBorderWidth * $scalingFactor5k)});
      }
    }
  }
  .sbb-tooltip-shadow::after {
    top: 100%;
    left: 50%;
    content: ' ';
    position: absolute;
    width: 0;
    height: 0;
    border-left: pxToEm($tooltipShadowBorderWidth) solid transparent;
    border-right: pxToEm($tooltipShadowBorderWidth) solid transparent;
    border-top: pxToEm($tooltipShadowBorderWidth) solid $tooltipBoxShadowColor;
    transform: translateX(-50%);
  }
  &.sbb-tooltip-content-left .sbb-tooltip-shadow::after {
    left: $tooltipArrowRightPosition;
  }
  &.sbb-tooltip-content-right .sbb-tooltip-shadow::after {
    left: $tooltipArrowLeftPosition;
  }

  &::after {
    top: 100%;
    left: 50%;
    content: ' ';
    height: pxToEm($tooltipContentArrowSize);
    width: pxToEm($tooltipContentArrowSize);
    position: absolute;
    pointer-events: none;
    transform: rotate(45deg) translate(pxToEm(-14));
    background-color: $sbbColorWhite;
    border: pxToEm($tooltipBorderWidth) solid transparent;
    border-right-color: $tooltipBorderColor;
    border-bottom-color: $tooltipBorderColor;
  }
  &.sbb-tooltip-content-left::after {
    left: $tooltipArrowRightPosition;
  }
  &.sbb-tooltip-content-right::after {
    left: $tooltipArrowLeftPosition;
  }
}

.sbb-tooltip-content-below {
  box-shadow: 0 pxToEm($tooltipShadowSize) 0 0 $tooltipBoxShadowColor;
  margin-top: pxToEm($tooltipShadowBorderWidth - $tooltipBorderWidth);

  &::after {
    bottom: 100%;
    left: 50%;
    content: ' ';
    height: pxToEm($tooltipContentArrowSize);
    width: pxToEm($tooltipContentArrowSize);
    position: absolute;
    pointer-events: none;
    transform: rotate(-135deg) translateY(pxToEm(-14));
    background-color: $sbbColorWhite;
    border: pxToEm($tooltipBorderWidth) solid transparent;
    border-right-color: $tooltipBorderColor;
    border-bottom-color: $tooltipBorderColor;
  }

  &.sbb-tooltip-content-left {
    &::after {
      left: $tooltipArrowRightPosition;
    }
  }
  &.sbb-tooltip-content-right {
    &::after {
      left: $tooltipArrowLeftPosition;
    }
  }
}

.sbb-tooltip-content {
  color: $tooltipColor;
  letter-spacing: 0;
  font-size: $sizeFontBase;
  border-radius: toPx($tooltipBorderRadius);
  text-align: left;
  border: toPx($tooltipBorderWidth) solid $tooltipBorderColor;
  max-width: toPx($tooltipMaxWidth);
  display: block;
  background: $sbbColorWhite;

  @include publicOnly() {
    @include mq($from: desktop4k) {
      font-size: $sizeFontBase * $scalingFactor4k;
      border: toPx($tooltipBorderWidth * $scalingFactor4k) solid $tooltipBorderColor;
      max-width: toPx($tooltipMaxWidth * $scalingFactor4k);
    }

    @include mq($from: desktop5k) {
      font-size: $sizeFontBase * $scalingFactor5k;
      border: toPx($tooltipBorderWidth * $scalingFactor5k) solid $tooltipBorderColor;
      max-width: toPx($tooltipMaxWidth * $scalingFactor5k);
    }
  }
}

.sbb-tooltip-icon {
  @include buttonResetFrameless();
  /* TODO: Remove with future release */
  @include svgIconColor($tooltipColor);
  color: $tooltipColor;
  width: toPx($tooltipIconSize);
  height: toPx($tooltipIconSize);
  cursor: pointer;
  text-decoration: none;
  outline: 0;
  line-height: 1;

  &:hover,
  &:focus {
    @include tooltipIconActive();
  }

  @include publicOnly() {
    @include mq($from: desktop4k) {
      width: toPx($tooltipIconSize * $scalingFactor4k);
      height: toPx($tooltipIconSize * $scalingFactor4k);
    }

    @include mq($from: desktop5k) {
      width: toPx($tooltipIconSize * $scalingFactor5k);
      height: toPx($tooltipIconSize * $scalingFactor5k);
    }
  }

  > * {
    max-width: 100%;
    max-height: 100%;
  }
}

.sbb-tooltip-close-icon {
  border-color: $tooltipBorderColor;
  border-width: pxToEm(1);
  border-style: solid;
  border-radius: 50%;
  float: right;
  position: absolute;
  top: toPx($tooltipContentPadding);
  right: toPx($tooltipContentPadding);

  @include businessOnly() {
    &,
    &:hover,
    &:focus {
      border-color: transparent;
    }
  }

  .sbb-tooltip-trigger-hover & {
    display: none;
  }
}

.sbb-tooltip-content-body {
  padding-top: toPx($tooltipContentPadding);
  padding-left: toPx($tooltipContentPadding);
  padding-bottom: toPx($tooltipContentPadding);
  padding-right: toPx($tooltipContentPadding + $tooltipIconSize + $tooltipContentPadding);

  @include publicOnly() {
    @include mq($from: desktop4k) {
      padding-top: toPx($tooltipContentPadding * $scalingFactor4k);
      padding-left: toPx($tooltipContentPadding * $scalingFactor4k);
      padding-bottom: toPx($tooltipContentPadding * $scalingFactor4k);
      padding-right: toPx(
        $tooltipContentPadding * $scalingFactor4k + $tooltipIconSize + $tooltipContentPadding *
          $scalingFactor4k
      );
    }

    @include mq($from: desktop5k) {
      padding-top: toPx($tooltipContentPadding * $scalingFactor5k);
      padding-left: toPx($tooltipContentPadding * $scalingFactor5k);
      padding-bottom: toPx($tooltipContentPadding * $scalingFactor5k);
      padding-right: toPx(
        $tooltipContentPadding * $scalingFactor5k + $tooltipIconSize + $tooltipContentPadding *
          $scalingFactor5k
      );
    }
  }

  .sbb-tooltip-trigger-hover & {
    padding-right: toPx($tooltipContentPadding);
  }
}

.sbb-tooltip-panel {
  // The overlay reference updates the pointer-events style property directly on the HTMLElement
  // depending on the state of the overlay. For tooltips the overlay panel should never enable
  // pointer events. To overwrite the inline CSS from the overlay reference `!important` is needed.
  pointer-events: none !important;
}
