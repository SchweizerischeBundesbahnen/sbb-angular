@import '../pagination';

$navigationIconTextMargin: 4;

sbb-navigation {
  .sbb-navigation {
    display: flex;
    padding-left: 0;
    list-style: none;
    margin-left: 0;

    li.sbb-navigation-item {
      position: relative;
      line-height: 0;
      text-align: center;
      outline: 0;
      height: toPx($paginationLiWidthHeight);
      width: 50%;
      display: flex;
      padding-left: 0;

      &.sbb-navigation-item-right {
        justify-content: flex-end;
      }

      &.sbb-navigation-item-left {
        justify-content: flex-start;
      }

      &:nth-of-type(1) {
        width: 100%;
      }

      > button,
      > a {
        @include buttonResetFrameless();
        cursor: pointer;
        background-color: $sbbColorWhite;
        text-decoration: none;
        max-width: 100%;
        height: 100%;
        outline: 0;

        color: $paginationBaseColor;
        &:hover,
        &:focus {
          color: $paginationActiveHoverColor;
        }

        font-size: pxToRem(13);
        line-height: pxToEm(20);

        @include publicOnly() {
          @include mq($from: desktop4k) {
            font-size: pxToRem(20);
            line-height: pxToEm(30);
          }

          @include mq($from: desktop5k) {
            font-size: pxToRem(26);
            line-height: pxToEm(19);
          }
        }

        .sbb-navigation-item-boundary {
          display: flex;
          align-items: center;
          justify-content: center;

          &.sbb-navigation-item-boundary-left {
            justify-content: flex-start;

            .sbb-navigation-item-boundary-arrow {
              margin-right: toPx($navigationIconTextMargin);
              @include publicOnly() {
                @include mq($from: desktop4k) {
                  margin-right: toPx($navigationIconTextMargin * $scalingFactor4k);
                }
                @include mq($from: desktop5k) {
                  margin-right: toPx($navigationIconTextMargin * $scalingFactor5k);
                }
              }
            }
          }

          &.sbb-navigation-item-boundary-right {
            justify-content: flex-end;

            .sbb-navigation-item-boundary-arrow {
              margin-left: toPx($navigationIconTextMargin);
              @include publicOnly() {
                @include mq($from: desktop4k) {
                  margin-left: toPx($navigationIconTextMargin * $scalingFactor4k);
                }
                @include mq($from: desktop5k) {
                  margin-left: toPx($navigationIconTextMargin * $scalingFactor5k);
                }
              }
            }
          }

          .sbb-navigation-item-boundary-text {
            @include ellipsis;
            max-width: 100%;
          }

          .sbb-navigation-item-boundary-arrow {
            flex: 0 0 toPx($paginationItemIconSize);
            width: toPx($paginationItemIconSize);
            height: toPx($paginationItemIconSize);

            @include mq($from: desktop4k) {
              flex: 0 0 toPx($paginationItemIconSize4K);
              width: toPx($paginationItemIconSize4K);
              height: toPx($paginationItemIconSize4K);
            }

            @include mq($from: desktop5k) {
              flex: 0 0 toPx($paginationItemIconSize5K);
              width: toPx($paginationItemIconSize5K);
              height: toPx($paginationItemIconSize5K);
            }

            &:hover,
            &:focus {
              color: $paginationActiveHoverColor;
            }

            > * {
              width: toPx($paginationItemIconSize);
              height: toPx($paginationItemIconSize);

              @include mq($from: desktop4k) {
                width: toPx($paginationItemIconSize4K);
                height: toPx($paginationItemIconSize4K);
              }

              @include mq($from: desktop5k) {
                width: toPx($paginationItemIconSize5K);
                height: toPx($paginationItemIconSize5K);
              }
            }
          }
        }
      }
    }
  }
}
