name: Continuous Integration
on: [push, pull_request]
env:
  BAZEL_COMMAND: bazelisk

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Shallow checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: Copy bazel.rc to user home
      run: cp ./.github/.bazelrc ~/
    - uses: actions/setup-node@v1
      with:
        node-version: 12

    - name: "Yarn: Get cache directory path"
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: "Yarn: Create hash key"
      id: yarn-cache-key-name
      run: echo "::set-output name=yarn_cache_key::$(yarn hash yarn.lock tools/postinstall/apply-patches.js)"
    - name: "Yarn: Restore dependencies from cache"
      uses: actions/cache@v1
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ steps.yarn-cache-key-name.outputs.yarn_cache_key }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: "Yarn: Install dependencies"
      run: yarn install --frozen-lockfile --non-interactive

    - name: "Bazelisk: Create hash key"
      id: bazelisk-cache-key-name
      run: echo "::set-output name=bazelisk_cache_key::$(yarn hash WORKSPACE .bazelversion)"
    - name: "Bazelisk: Restore dependencies from cache"
      uses: actions/cache@v1
      id: bazelisk-cache
      with:
        path: "/home/runner/.cache/bazel"
        key: ${{ runner.os }}-bazelisk-${{ steps.bazelisk-cache-key-name.outputs.bazelisk_cache_key }}
        restore-keys: |
          ${{ runner.os }}-bazelisk-

    - name: "Bazel: Create hash key"
      id: bazel-cache-key-name
      run: echo "::set-output name=bazel_cache_key::$(yarn hash WORKSPACE .bazelversion yarn.lock)"
    - name: "Bazel: Restore artifacts from cache"
      uses: actions/cache@v1
      id: bazel-cache
      with:
        path: "/home/runner/bazel_repository_cache"
        key: ${{ runner.os }}-bazel-${{ steps.bazel-cache-key-name.outputs.bazel_cache_key }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-bazel-${{ steps.bazel-cache-key-name.outputs.bazel_cache_key }}-

    - name: "Build: Migrate public to business components"
      run: yarn -s build:public2business
    - name: "Build: Bazel"
      run: bazelisk build src/... --build_tag_filters=-release-package,-prod-showcase

    - name: "Test: Run local tests"
      run: bazelisk test src/... --build_tag_filters=-e2e --test_tag_filters=-e2e --build_tests_only

    - name: "Lint: Run tslint"
      run: yarn tslint

  showcase:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    env:
      PR_NUMBER: ${{ github.event.number }}
    steps:
    - name: Shallow checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: Copy bazel.rc to user home
      run: cp ./.github/.bazelrc ~/
    - uses: actions/setup-node@v1
      with:
        node-version: 12

    - name: "Yarn: Get cache directory path"
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: "Yarn: Create hash key"
      id: yarn-cache-key-name
      run: echo "::set-output name=yarn_cache_key::$(yarn hash yarn.lock tools/postinstall/apply-patches.js)"
    - name: "Yarn: Restore dependencies from cache"
      uses: actions/cache@v1
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-showcase-${{ steps.yarn-cache-key-name.outputs.yarn_cache_key }}
        restore-keys: |
          ${{ runner.os }}-yarn-showcase-
    - name: "Yarn: Install dependencies"
      run: yarn install --frozen-lockfile --non-interactive

    - name: "Bazelisk: Create hash key"
      id: bazelisk-cache-key-name
      run: echo "::set-output name=bazelisk_cache_key::$(yarn hash WORKSPACE .bazelversion)"
    - name: "Bazelisk: Restore dependencies from cache"
      uses: actions/cache@v1
      id: bazelisk-cache
      with:
        path: "/home/runner/.cache/bazel"
        key: ${{ runner.os }}-bazelisk-${{ steps.bazelisk-cache-key-name.outputs.bazelisk_cache_key }}
        restore-keys: |
          ${{ runner.os }}-bazelisk-

    - name: "Bazel: Create hash key"
      id: bazel-cache-key-name
      run: echo "::set-output name=bazel_cache_key::$(yarn hash WORKSPACE .bazelversion yarn.lock)"
    - name: "Bazel: Restore artifacts from cache"
      uses: actions/cache@v1
      id: bazel-cache
      with:
        path: "/home/runner/bazel_repository_cache"
        key: ${{ runner.os }}-bazel-prod-${{ steps.bazel-cache-key-name.outputs.bazel_cache_key }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-bazel-prod-${{ steps.bazel-cache-key-name.outputs.bazel_cache_key }}-

    - name: "Build: Migrate public to business components"
      run: yarn -s build:public2business
    - name: "Build: Showcase"
      run: yarn -s build:showcase
    - name: "Pack: Showcase"
      run: yarn pack --cwd ./dist/releases/showcase --filename ./sbb-esta-angular-showcase.tgz
    - name: "Deploy: Staging"
      run: |
        curl --url https://angular-staging.app.sbb.ch/$PR_NUMBER \
        -X POST --user sbb:ezUxDHgb6rAHTDU0HLHJ \
        -F "tarball=@sbb-esta-angular-showcase.tgz"