name: Continuous Integration
on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
  pull_request:
    branches:
      - '**'
    tags-ignore:
      - '**'
env:
  BAZEL_COMMAND: bazelisk

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Shallow checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: Copy bazel.rc to user home
      run: cp ./.github/.bazelrc ~/
    - uses: actions/setup-node@v1
      with:
        node-version: 12

    - name: "Yarn: Get cache directory path"
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: "Yarn: Create hash key"
      id: yarn-cache-key-name
      run: echo "::set-output name=yarn_cache_key::$(yarn -s hash yarn.lock tools/postinstall/apply-patches.js)"
    - name: "Yarn: Restore dependencies from cache"
      uses: actions/cache@v1
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ steps.yarn-cache-key-name.outputs.yarn_cache_key }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: "Yarn: Install dependencies"
      run: yarn install --frozen-lockfile --non-interactive

    - name: "Bazelisk: Sync"
      run: bazelisk sync
    - name: "Bazelisk: Get artifacts cache directory path"
      id: bazelisk-cache-dir-path
      run: echo "::set-output name=dir::$(bazelisk info bazel-bin)"
    - name: "Bazelisk: Create hash key"
      id: bazelisk-cache-key-name
      run: echo "::set-output name=bazelisk_cache_key::$(yarn -s hash WORKSPACE .bazelversion yarn.lock)"
    - name: "Bazelisk: Restore from cache"
      uses: actions/cache@v1
      id: bazelisk-cache
      with:
        path: ${{ steps.bazelisk-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-bazelisk-build-artifacts-${{ steps.bazelisk-cache-key-name.outputs.bazelisk_cache_key }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-bazelisk-build-artifacts-${{ steps.bazelisk-cache-key-name.outputs.bazelisk_cache_key }}-

    - name: "Build: Bazel core"
      run: bazelisk build src/angular-core/... --build_tag_filters=-release-package,-prod-showcase
    - name: "Build: Bazel keycloak"
      run: bazelisk build src/angular-keycloak/... --build_tag_filters=-release-package,-prod-showcase
    - name: "Build: Bazel icons"
      run: bazelisk build src/angular-icons/... --build_tag_filters=-release-package,-prod-showcase
    - name: "Build: Bazel maps"
      run: bazelisk build src/angular-maps/... --build_tag_filters=-release-package,-prod-showcase
    - name: "Build: Bazel business"
      run: bazelisk build src/angular-business/... --build_tag_filters=-release-package,-prod-showcase
      
    - run: bazelisk build src/angular-public/loading/...
    - run: bazelisk build src/angular-public/notification/...
    - run: bazelisk build src/angular-public/option/...
    - run: bazelisk build src/angular-public/pagination/...
    - run: bazelisk build src/angular-public/processflow/...
    - run: bazelisk build src/angular-public/radio-button/...
    - run: bazelisk build src/angular-public/radio-button-panel/...
    - run: bazelisk build src/angular-public/schematics/...
    - run: bazelisk build src/angular-public/search/...
    - run: bazelisk build src/angular-public/select/...
    - run: bazelisk build src/angular-public/table/...
    - run: bazelisk build src/angular-public/tabs/...
    - run: bazelisk build src/angular-public/tag/...
    - run: bazelisk build src/angular-public/textarea/...
    - run: bazelisk build src/angular-public/textexpand/...
    - run: bazelisk build src/angular-public/time-input/...
    - run: bazelisk build src/angular-public/toggle/...
    - run: bazelisk build src/angular-public/tooltip/...
    - run: bazelisk build src/angular-public/usermenu/...
    - run: bazelisk build src/angular-public/accordion/...     
    - run: bazelisk build src/angular-public/autocomplete/...  
    - run: bazelisk build src/angular-public/badge/...
    - run: bazelisk build src/angular-public/breadcrumb/...    
    - run: bazelisk build src/angular-public/button/...        
    - run: bazelisk build src/angular-public/captcha/...       
    - run: bazelisk build src/angular-public/checkbox/...      
    - run: bazelisk build src/angular-public/checkbox-panel/...
    - run: bazelisk build src/angular-public/datepicker/...    
    - run: bazelisk build src/angular-public/dropdown/...      
    - run: bazelisk build src/angular-public/field/...
    - run: bazelisk build src/angular-public/file-selector/... 
    - run: bazelisk build src/angular-public/ghettobox/...     
    - run: bazelisk build src/angular-public/input/...
    - run: bazelisk build src/angular-public/lightbox/...
    - run: bazelisk build src/angular-public/links/...

    - name: "Build: Bazel public"
      run: bazelisk build src/angular-public/... --build_tag_filters=-release-package,-prod-showcase
    - name: "Build: Bazel showcase"
      run: bazelisk build src/showcase/... --build_tag_filters=-release-package,-prod-showcase
            
    - name: "Test: Run local tests"
      run: bazelisk test src/... --build_tag_filters=-e2e --test_tag_filters=-e2e --build_tests_only

    - name: "Lint: Run tslint"
      run: yarn tslint

  packages:
    runs-on: ubuntu-latest
    steps:
    - name: Shallow checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: Copy bazel.rc to user home
      run: cp ./.github/.bazelrc ~/
    - uses: actions/setup-node@v1
      with:
        node-version: 12

    - name: "Yarn: Get cache directory path"
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: "Yarn: Create hash key"
      id: yarn-cache-key-name
      run: echo "::set-output name=yarn_cache_key::$(yarn -s hash yarn.lock tools/postinstall/apply-patches.js)"
    - name: "Yarn: Restore dependencies from cache"
      uses: actions/cache@v1
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ steps.yarn-cache-key-name.outputs.yarn_cache_key }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: "Yarn: Install dependencies"
      run: yarn install --frozen-lockfile --non-interactive

    - name: "Bazelisk: Sync"
      run: bazelisk sync
    - name: "Bazelisk: Get artifacts cache directory path"
      id: bazelisk-cache-dir-path
      run: echo "::set-output name=dir::$(bazelisk info bazel-bin)"
    - name: "Bazelisk: Create hash key"
      id: bazelisk-cache-key-name
      run: echo "::set-output name=bazelisk_cache_key::$(yarn -s hash WORKSPACE .bazelversion yarn.lock)"
    - name: "Bazelisk: Restore from cache"
      uses: actions/cache@v1
      id: bazelisk-cache
      with:
        path: ${{ steps.bazelisk-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-bazelisk-packages-artifacts-${{ steps.bazelisk-cache-key-name.outputs.bazelisk_cache_key }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-bazelisk-packages-artifacts-${{ steps.bazelisk-cache-key-name.outputs.bazelisk_cache_key }}-

    - name: "Build: Packages"
      run: yarn -s build

  showcase:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    env:
      PR_NUMBER: ${{ github.event.number }}
    steps:
    - name: Shallow checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: Copy bazel.rc to user home
      run: cp ./.github/.bazelrc ~/
    - uses: actions/setup-node@v1
      with:
        node-version: 12

    - name: "Yarn: Get cache directory path"
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: "Yarn: Create hash key"
      id: yarn-cache-key-name
      run: echo "::set-output name=yarn_cache_key::$(yarn -s hash yarn.lock tools/postinstall/apply-patches.js)"
    - name: "Yarn: Restore dependencies from cache"
      uses: actions/cache@v1
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ steps.yarn-cache-key-name.outputs.yarn_cache_key }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: "Yarn: Install dependencies"
      run: yarn install --frozen-lockfile --non-interactive

    - name: "Bazelisk: Sync"
      run: bazelisk sync
    - name: "Bazelisk: Get artifacts cache directory path"
      id: bazelisk-cache-dir-path
      run: echo "::set-output name=dir::$(bazelisk info bazel-bin)"
    - name: "Bazelisk: Create hash key"
      id: bazelisk-cache-key-name
      run: echo "::set-output name=bazelisk_cache_key::$(yarn -s hash WORKSPACE .bazelversion yarn.lock)"
    - name: "Bazelisk: Restore from cache"
      uses: actions/cache@v1
      id: bazelisk-cache
      with:
        path: ${{ steps.bazelisk-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-bazelisk-showcase-artifacts-${{ steps.bazelisk-cache-key-name.outputs.bazelisk_cache_key }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-bazelisk-showcase-artifacts-${{ steps.bazelisk-cache-key-name.outputs.bazelisk_cache_key }}-

    - name: "Build: Showcase"
      run: yarn -s build:showcase
    - name: "Pack: Showcase"
      run: mv $(npm pack ./dist/releases/showcase | tail -n 1) sbb-esta-angular-showcase.tgz
    - name: "Deploy: Staging"
      run: |
        curl --url https://angular-staging.app.sbb.ch/$PR_NUMBER \
        -X POST --user sbb:ezUxDHgb6rAHTDU0HLHJ \
        -F "tarball=@sbb-esta-angular-showcase.tgz"