name: Release
on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+-*'
env:
  BAZEL_COMMAND: bazelisk

jobs:
  packages:
    runs-on: ubuntu-latest
    steps:
    - name: Shallow checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: Copy bazel.rc to user home
      run: cp ./.github/.bazelrc ~/
    - uses: actions/setup-node@v1
      with:
        node-version: 12
        registry-url: 'https://registry.npmjs.org'
        scope: sbb-esta

    - name: "Yarn: Get cache directory path"
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: "Yarn: Create hash key"
      id: yarn-cache-key-name
      run: echo "::set-output name=yarn_cache_key::$(yarn -s hash yarn.lock tools/postinstall/apply-patches.js)"
    - name: "Yarn: Restore dependencies from cache"
      uses: actions/cache@v1
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ steps.yarn-cache-key-name.outputs.yarn_cache_key }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: "Yarn: Install dependencies"
      run: yarn install --frozen-lockfile --non-interactive

    - name: "Build: Packages"
      run: yarn -s build
      
    - uses: actions/upload-artifact@v1
      with:
        name: packages
        path: dist/releases

    - name: "Publish: Determine npm tag"
      id: npm_tag
      run: |
        if [[ "$REF" == *"-"* ]]
        then
            echo "::set-output name=npm_tag::next"
        else
            echo "::set-output name=npm_tag::latest"
        fi
      env: 
        REF: ${{ github.ref }}
    - name: "Publish: @sbb-esta/angular-core"
      run: yarn publish dist/releases/angular-core --tag ${{ steps.npm_tag.outputs.npm_tag }}  || true
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    - name: "Publish: @sbb-esta/angular-icons"
      run: yarn publish dist/releases/angular-icons --tag ${{ steps.npm_tag.outputs.npm_tag }} || true
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    - name: "Publish: @sbb-esta/angular-keycloak"
      run: yarn publish dist/releases/angular-keycloak --tag ${{ steps.npm_tag.outputs.npm_tag }} || true
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    - name: "Publish: @sbb-esta/angular-public"
      run: yarn publish dist/releases/angular-public --tag ${{ steps.npm_tag.outputs.npm_tag }} || true
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    - name: "Publish: @sbb-esta/angular-maps"
      run: yarn publish dist/releases/angular-maps --tag ${{ steps.npm_tag.outputs.npm_tag }} || true
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    - name: "Publish: @sbb-esta/angular-business"
      run: yarn publish dist/releases/angular-business --tag ${{ steps.npm_tag.outputs.npm_tag }} || true
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  showcase:
    runs-on: ubuntu-latest
    steps:
    - name: Login to GitHub Docker Repository
      uses: azure/docker-login@v1
      with:
        login-server: docker.pkg.github.com
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Shallow checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: Copy bazel.rc to user home
      run: cp ./.github/.bazelrc ~/
    - uses: actions/setup-node@v1
      with:
        node-version: 12

    - name: "Yarn: Get cache directory path"
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: "Yarn: Create hash key"
      id: yarn-cache-key-name
      run: echo "::set-output name=yarn_cache_key::$(yarn -s hash yarn.lock tools/postinstall/apply-patches.js)"
    - name: "Yarn: Restore dependencies from cache"
      uses: actions/cache@v1
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ steps.yarn-cache-key-name.outputs.yarn_cache_key }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: "Yarn: Install dependencies"
      run: yarn install --frozen-lockfile --non-interactive

    - name: "Build: Showcase"
      run: yarn -s build:showcase

    - name: "Docker: Parse release version"
      id: docker_release_version
      run: echo ::set-output name=docker_release_version::${GITHUB_REF/refs\/tags\//}
    - name: "Build: Docker image"
      run: docker build -t docker.pkg.github.com/sbb-design-systems/sbb-angular/showcase:${{ steps.docker_release_version.outputs.docker_release_version }} .
    - name: "Publish: Docker image"
      run: docker push docker.pkg.github.com/sbb-design-systems/sbb-angular/showcase:${{ steps.docker_release_version.outputs.docker_release_version }}