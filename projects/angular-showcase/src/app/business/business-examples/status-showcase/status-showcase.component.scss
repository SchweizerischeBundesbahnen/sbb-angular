@import '../../../../../../sbb-esta/angular-core/styles/common/functions';
@import '../../../../../../sbb-esta/angular-core/styles/common/mixins';

@mixin svgIconColor2Paths($fillColor1, $strokeColor1, $fillColor2, $strokeColor2) {
  &.sbb-svg-icon {
    & > g > :first-child path {
      stroke: $strokeColor1;
      fill: $fillColor1;
    }

    & > g > :nth-child(2) path {
      stroke: $strokeColor2;
      fill: $fillColor2;
    }
  }
}

:host {
  p {
    display: flex;
    flex-direction: column;
    sbb-status {
      width: fit-content;
    }
  }

  sbb-table {
    th,
    td {
      min-width: pxToRem(200px);
    }

    th {
      text-align: left;
    }
  }
}

.sbb-tooltip-template {
  display: block;
  background: lightyellow;
  color: $sbbColorGranite;
  font-size: 0.9375rem;
  padding: 0.25rem 0.5rem;
  border-radius: 0.25rem;
  border: 0.0625rem solid rgb(104, 104, 104, 0.7);
}

:host ::ng-deep {
  svg.sbb-status-grey-eye {
    @include svgIconColors($sbbColorGreyMedium, $sbbColorWhite);
    @include svgIconBackground($sbbColorGreyMedium, pxToRem(2px));
  }

  svg.sbb-status-eye {
    @include svgIconColors($sbbColorSky, $sbbColorBlue);
  }

  svg.sbb-status-grinning {
    @include svgIconColors($sbbColorLemon, $sbbColorBlack);
  }

  svg.sbb-status-heart {
    @include svgIconColors($sbbColorRed150, $sbbColorViolet);

    &.sbb-svg-icon {
      & > path {
        stroke-width: 2;
        fill-opacity: 0.7;
      }
    }
  }

  svg.sbb-status-trainstation {
    @include svgIconColors(none, $sbbColorWhite);
    @include svgIconBackground($sbbColorRed, pxToRem(2px));
  }

  svg.sbb-icon-status-question {
    @include svgIconColor2Paths(none, $sbbColorBlack, $sbbColorBlack, none);
    @include svgIconBackground($sbbColorOrange, pxToRem(2px));
  }

  svg.sbb-status-happy {
    @include svgIconColors($sbbColorLemon, $sbbColorBlack);
  }
}
