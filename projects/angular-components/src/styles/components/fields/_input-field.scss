// Form Styles
// ----------------------------------------------------------------------------------------------------
@mixin inputfields {
  @include ellipsis;
  @include placeholder($colorBlack40);
  @include disabledinputfields;
  @include inputFieldPadding();

  outline: none;
  background: $colorWhite;
  border: $inputFieldBorderWidth solid $colorBlack72;
  border-radius: $inputFieldBorderRadius;
  color: $colorGrey;
  line-height: 1.5;
  font-size: pxToRem($sizeFontDefault);
  -webkit-appearance: none;

  &::-ms-clear {
    display: none;
  }

  @include mq($from: desktop4k) {
    border-width: toPx($inputFieldBorderWidth * $scalingFactor4k);
    border-radius: toPx($inputFieldBorderRadius * $scalingFactor4k);
    font-size: toPx($sizeFontDefault4k);
  }

  @include mq($from: desktop5k) {
    border-width: toPx($inputFieldBorderWidth * $scalingFactor5k);
    border-radius: toPx($inputFieldBorderRadius * $scalingFactor5k);
    font-size: pxToRem($sizeFontDefault5k);
  }

  &:focus {
    border-color: $colorGrey;
  }

  &.ng-touched.ng-invalid:not([aria-expanded='true']) {
    color: $colorError;
    border-color: $colorError;
  }
}

@mixin inputFieldPadding() {
  padding: $inputFieldPaddingTop $inputFieldPaddingLeftRight $inputFieldPaddingBottom;

  @include mq($from: desktop4k) {
    padding: toPx($inputFieldPaddingTop * $scalingFactor4k) toPx($inputFieldPaddingLeftRight * $scalingFactor4k) toPx($inputFieldPaddingBottom * $scalingFactor4k);
  }

  @include mq($from: desktop5k) {
    padding: toPx($inputFieldPaddingTop * $scalingFactor5k) toPx($inputFieldPaddingLeftRight * $scalingFactor5k) toPx($inputFieldPaddingBottom * $scalingFactor5k);
  }
}

@mixin disabledinputfields {
  &:disabled {
    background-color: $colorBlack5;
    border-color: $colorBlack20;
  }
}

@mixin formlabel {
  color: $colorGrey;
  font-size: pxToEm(13);
}

@mixin label {
  letter-spacing: 0;
  outline: 0px;
  resize: none;
  background-color: transparent;
  font-family: $fontSbbRoman;
  font-size: pxToRem(13);
  color: $colorGrey;
  line-height: pxToRem(16);
  display: block;

  @include mq($from: desktop4k) {
    font-size: pxToRem(13 * $scalingFactor4k);
  }

  @include mq($from: desktop5k) {
    font-size: pxToRem(13 * $scalingFactor5k);
  }
}

@mixin sbbLabel {
  margin-bottom: pxToEm($labelMarginBottom, 13);
  padding-left: pxToEm($labelPaddingLeft, 13);

  @include mq($from: desktop4k) {
    margin-bottom: pxToEm($labelMarginBottom * $scalingFactor4k, 13);
  }

  @include mq($from: desktop5k) {
    margin-bottom: pxToEm($labelMarginBottom * $scalingFactor5k, 13);
  }

  @include label;
}

@mixin inputMode($mode) {
  @if $mode == short {
    @include inputShort();
  } @else if $mode == medium {
    @include inputMedium();
  } @else if $mode == long {
    @include inputLong();
  }
}

@mixin inputShort {
  width: 33.333%;

  @include mq($from: mobileLandscape) {
    width: 25%;
  }

  @include mq($from: desktop) {
    width: 16.66666%;
  }
}

@mixin inputMedium {
  width: 100%;

  @include mq($from: tabletPortrait) {
    width: 50%;
  }
}

@mixin inputLong {
  width: 100%;
}
